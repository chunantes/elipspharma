<?xml version="1.0" encoding="UTF-8"?>
<flow xmlns="http://www.springframework.org/schema/webflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/webflow
    http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd"
	parent="main">

	<!-- Variable d'entrée -->
	<input name="idPrescription" />

	<!-- Démarrage -->
	<on-start>
		<evaluate expression="essaiSearchCriteria.clear()" />
		<evaluate expression="patientSearchCriteria.clear()" />
		<!-- Initialisation complétion automatique des essais -->
		<evaluate expression="'numInterne'" result="autoCompleteEssaiManager.searchCriteria.activeOrder" />
		<evaluate expression="'numInterneOrNomOrPromoteur'" result="autoCompleteEssaiManager.searchCriteriaProperty" />

		<evaluate expression="'numeroIpp'" result="autoCompletePatientManager.searchCriteria.activeOrder" />
		<evaluate expression="'numeroIppOrNomOrPrenom'" result="autoCompletePatientManager.searchCriteriaProperty" />
		<evaluate expression="prescriptionManager.init()" />
	</on-start>

	<decision-state id="createOrEdit">
		<if test="idPrescription==null" then="create" else="edit" />
	</decision-state>

	<!-- Création -->
	<action-state id="create">
		<evaluate expression="prescriptionManager.setBean(prescriptionFactory.getInitializedObject())" />
		<transition to="createPrescription" />
	</action-state>

	<!-- Modification -->
	<action-state id="edit">
		<evaluate expression="prescriptionManager.setBean(prescriptionService.get(idPrescription))" />
		<transition to="editPrescription">
			<set name="prescriptionManager.valid" value="true" />
			<set value="prescriptionManager.bean.dispenseEmpty" name="prescriptionManager.readOnly" />
		</transition>
	</action-state>


	<!-- Page principale -->
	<view-state id="createPrescription" view="../../../pages/prescription/edit/editPrescription.xhtml">
		<on-render>
			<evaluate expression="prescriptionService.reattach(prescriptionManager.bean)" result="prescriptionManager.bean" />
		</on-render>

		<!-- Prescrire -->
		<transition on="save" to="viewRecapPrescription">
			<evaluate expression="prescriptionService.reattach(prescriptionManager.bean)" result="prescriptionManager.bean" />
			<evaluate expression="essaiService.reattach(prescriptionManager.bean.inclusion.essai)" result="prescriptionManager.bean.inclusion.essai" />
			<evaluate expression="inclusionService.save(prescriptionManager.bean.inclusion)" />
			<evaluate expression="prescriptionService.save(prescriptionManager.bean)" result="prescriptionManager.bean" />
			<set name="prescriptionManager.readOnly" value="true" />
			<evaluate expression="prescriptionManager.confirm()" />
		</transition>
		<transition on="saveAndDispense" to="editDispensation">
			<evaluate expression="prescriptionService.reattach(prescriptionManager.bean)" result="prescriptionManager.bean" />
			<evaluate expression="essaiService.reattach(prescriptionManager.bean.inclusion.essai)" result="prescriptionManager.bean.inclusion.essai" />
			<evaluate expression="inclusionService.save(prescriptionManager.bean.inclusion)" />
			<evaluate expression="prescriptionService.save(prescriptionManager.bean)" />
			<set name="prescriptionManager.readOnly" value="true" />
			<set name="flashScope.idPrescription" value="prescriptionManager.bean.id" />
			<evaluate expression="prescriptionManager.confirm()" />
		</transition>

		<!-- Ajouter un patient -->
		<transition on="ajouterPatient" to="addPatient" />

		<!-- Ajouter un patient -->
		<transition on="editPatient" to="editPatient">
			<set name="flashScope.idPatient" value="requestParameters.idPatient" />
		</transition>

		<!-- ajouter un produit prescrit -->
		<transition on="addProduitPrescrit" to="editPrescription">
			<evaluate expression="prescriptionManager.addProduitPrescrit(produitPrescritManager.bean)" />
		</transition>



		<!-- Bouton annuler. -->
		<transition on="cancel" to="createOrEdit" />

		<!-- Retour -->
		<transition on="comeback" to="comeback" />

		<!-- erreur -->
		<transition on="error" to="editPrescription" />
	</view-state>

	<!-- Page principale -->
	<view-state id="editPrescription" view="../../../pages/prescription/edit/editPrescription.xhtml">

		<on-render>
			<evaluate expression="prescriptionService.reattach(prescriptionManager.bean)" result="prescriptionManager.bean" />
			<evaluate expression="essaiService.reattach(prescriptionManager.bean.inclusion.essai)" result="prescriptionManager.bean.inclusion.essai" />
			<set name="prescriptionManager.patientSelected" value="prescriptionManager.bean.inclusion.patient" />
			<evaluate expression="prescriptionManager.initServices()" />
		</on-render>

		<!-- Prescrire -->
		<transition on="save" to="viewRecapPrescription">
			<evaluate expression="prescriptionService.reattach(prescriptionManager.bean)" result="prescriptionManager.bean" />
			<evaluate expression="essaiService.reattach(prescriptionManager.bean.inclusion.essai)" result="prescriptionManager.bean.inclusion.essai" />
			<evaluate expression="inclusionService.save(prescriptionManager.bean.inclusion)" />
			<evaluate expression="prescriptionService.save(prescriptionManager.bean)" result="prescriptionManager.bean" />
			<set name="prescriptionManager.readOnly" value="true" />
			<evaluate expression="prescriptionManager.confirm()" />
		</transition>
		<transition on="saveAndDispense" to="editDispensation">
			<evaluate expression="prescriptionService.reattach(prescriptionManager.bean)" result="prescriptionManager.bean" />
			<evaluate expression="essaiService.reattach(prescriptionManager.bean.inclusion.essai)" result="prescriptionManager.bean.inclusion.essai" />
			<evaluate expression="inclusionService.save(prescriptionManager.bean.inclusion)" />
			<evaluate expression="prescriptionService.save(prescriptionManager.bean)" />
			<set name="prescriptionManager.readOnly" value="true" />
			<set name="flashScope.idPrescription" value="prescriptionManager.bean.id" />
			<evaluate expression="prescriptionManager.confirm()" />
		</transition>

		<!-- Ajouter un patient -->
		<transition on="ajouterPatient" to="addPatient" />

		<!-- Ajouter un patient -->
		<transition on="editPatient" to="editPatient">
			<set name="flashScope.idPatient" value="requestParameters.idPatient" />
		</transition>

		<!-- ajouter un produit prescrit -->
		<transition on="addProduitPrescrit" to="editPrescription">
			<evaluate expression="prescriptionManager.addProduitPrescrit(produitPrescritManager.bean)" />
		</transition>



		<!-- Bouton annuler. -->
		<transition on="cancel" to="createOrEdit" />

		<!-- Retour -->
		<transition on="comeback" to="comeback" />

		<!-- erreur -->
		<transition on="error" to="editPrescription" />
	</view-state>


	<view-state id="viewRecapPrescription" view="../../../pages/prescription/edit/recapPrescription.xhtml">

		<on-render>
			<evaluate expression="prescriptionService.reattach(prescriptionManager.bean)" result="prescriptionManager.bean" />
			<evaluate expression="essaiService.reattach(prescriptionManager.bean.inclusion.essai)" result="prescriptionManager.bean.inclusion.essai" />
			<evaluate expression="prescriptionManager.initServices()" />
		</on-render>


		<transition on="cancel" to="viewConsulterPrescription" />
	</view-state>

	<!-- Ajout d'un patient -->
	<subflow-state id="addPatient" subflow="patient/edit">
		<transition to="editPrescription" />
	</subflow-state>

	<!-- Edition d'un patient -->
	<subflow-state id="editPatient" subflow="patient/edit">
		<attribute name="idPatient" value="flashScope.idPatient" />
		<transition to="editPrescription">
			<evaluate expression="patientService.get(prescriptionManager.patientSelected.id)" result="prescriptionManager.patientSelected" />
		</transition>
	</subflow-state>

	<!-- Edition d'un patient -->
	<subflow-state id="editDispensation" subflow="dispensation/edit">
		<attribute name="idPrescription" value="flashScope.idPrescription" />
		<transition to="comeback" />
	</subflow-state>

	<!-- Etat final -->
	<end-state id="comeback" />

</flow>