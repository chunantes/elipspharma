<?xml version="1.0" encoding="UTF-8"?>
<flow xmlns="http://www.springframework.org/schema/webflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/webflow
    http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd"
	parent="main">

	<!-- Variable d'entrée -->
	<input name="idPreparation" />
	<input name="idOnglet" />

	<on-start>
		<evaluate expression="pharmacieSearchCriteria.clear()" />
		<evaluate expression="pharmacieService.getAll(pharmacieSearchCriteria)" result="pharmaciesManager.beans" />
		<evaluate expression="preparationManager.init()" />
	</on-start>

	<decision-state id="createOrEdit">
		<if test="idPreparation==null" then="createFromScratch" else="edit" />
	</decision-state>

	<!-- Création From Scratch -->
	<action-state id="createFromScratch">
		<evaluate expression="preparationManager.setBean(preparationFactory.getInitializedObject(essaiManager.getBean()))" />
		<transition to="initServices" />
	</action-state>

	<!-- Modification -->
	<action-state id="edit">
		<evaluate expression="preparationManager.setBean(preparationFactory.getInitializedObjectFromEssai(essaiManager.getBean(), idPreparation))" />
		<transition to="initServices" />
	</action-state>

	<!-- Initialisation des listes de services -->
	<action-state id="initServices">
		<evaluate expression="'nom'" result="servicesProduitGlobalManager.searchCriteria.activeOrder" />
		<transition to="applyGetAll" />
	</action-state>
	<action-state id="applyGetAll">
		<evaluate expression="selectableBeanFactory.getInitializedObjects(serviceService.getAll(servicesProduitGlobalManager.searchCriteria))" result="servicesProduitGlobalManager.beans" result-type="java.util.List" />
		<transition to="prepareSelected" />
	</action-state>
	<action-state id="prepareSelected">
		<evaluate expression="beanManagerHelper.updateSelectableWrapped(preparationManager.bean.services, servicesProduitGlobalManager.beans)" />
		<transition to="editPreparation" />
	</action-state>

	<!-- Page principale -->
	<view-state id="editPreparation" view="../../pages/editPreparation/editPreparation.xhtml">
		<on-render>
			<evaluate expression="preparationService.reattach(preparationManager.bean)" result="preparationManager.bean" />
		</on-render>

		<!-- Annuler -->
		<transition on="cancel" to="createOrEdit" />

		<transition on="submit" to="editPreparation" />

		<!-- Sauvegarde de l'essai -->
		<transition on="save" to="editPreparation">
			<evaluate expression="produitsManager.addToEssaiCollection(essaiManager.bean, preparationManager.bean)" />
			<evaluate expression="preparationService.addMaj(preparationManager.bean)" />
			<evaluate expression="preparationManager.setIndexOngletCourant(0)" />
			<evaluate expression="essaiService.save(essaiManager.bean)" result="essaiManager.bean" />
			<evaluate expression="essaiManager.getProduitByName(preparationManager.bean)" result="preparationManager.bean" />
			<set name="preparationManager.enregistre" value="true" />
		</transition>

		<transition on="saveAndReturn" to="comeback">
			<evaluate expression="produitsManager.addToEssaiCollection(essaiManager.bean, preparationManager.bean)" />
			<evaluate expression="preparationService.addMaj(preparationManager.bean)" />
			<evaluate expression="preparationManager.setIndexOngletCourant(0)" />
			<evaluate expression="essaiService.save(essaiManager.bean)" result="essaiManager.bean" />
			<evaluate expression="essaiManager.getProduitByName(preparationManager.bean)" result="preparationManager.bean" />
			<set name="preparationManager.enregistre" value="true" />
		</transition>

		<!-- Initialisation d'un conditionnement -->
		<transition on="initConditionnement" to="editPreparation">
			<evaluate expression="conditionnementManager.setBean(conditionnementFactory.getInitializedObject(preparationManager.bean))" />
			<set name="conditionnementListManager.editFlag" value="true"></set>
		</transition>

		<!-- Suppression d'un conditionnement -->
		<transition on="deleteConditionnement" to="deleteConditionnement" />


		<!-- Suppression des details de stockages -->
		<transition on="deleteDetailStockage" to="deleteDetailStockage" />

		<!-- Suppression des details de stockages -->
		<transition on="deleteDetailStockageRetour" to="deleteDetailStockageRetour" />

		<!-- Retour à l'essai -->
		<transition on="comeback" to="comeback" />

		<!-- Erreur -->
		<transition on="error" to="editPreparation" />
	</view-state>



	<!-- Retour à l'essai -->
	<!-- <subflow-state id="comeback" subflow="editEssai"> -->
	<!-- <input name="idEssai" required="true" value="essaiManager.bean.id" /> -->
	<!-- <input name="idOnglet" required="true" value="'ONG_PRODUITS'" /> -->
	<!-- </subflow-state> -->
	<!-- -->
	<end-state id="comeback" />

</flow>