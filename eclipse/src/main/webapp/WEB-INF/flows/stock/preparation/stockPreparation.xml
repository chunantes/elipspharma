<?xml version="1.0" encoding="UTF-8"?>
<flow xmlns="http://www.springframework.org/schema/webflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/webflow
    http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd"
	parent="main">

	<input name="idEssai" />

	<!-- Démarrage -->
	<on-start>
		<evaluate expression="essaiSearchCriteria.clear()" />
		<!-- Initialisation complétion automatique des essais -->
		<evaluate expression="'numInterne'" result="autoCompleteEssaiManager.searchCriteria.activeOrder" />
		<evaluate expression="'numInterneOrNomOrPromoteur'" result="autoCompleteEssaiManager.searchCriteriaProperty" />
		<evaluate expression="sortieManager.init()" />
		<evaluate expression="TYPE_MOUVEMENT_PREPARATION_SORTIE" result="sortieManager.typeSortie" />
	</on-start>

	<decision-state id="isForEssai">
		<if then="initEssai" test="idEssai != null" else="stockSortie" />
	</decision-state>
	
	<decision-state id="isUse">
		<if test="sortieManager.essaiSelectedIsUsed != true" then="editSortie" else="stockSortie"/>
	</decision-state>

	<action-state id="initEssai">
		<evaluate expression="essaiService.get(idEssai)" result="sortieManager.essaiSelected" />
		<transition to="stockSortie">
			<evaluate expression="sortieManager.handleSelectEssai(null)" />
		</transition>
	</action-state>

	<!-- Page principale -->
	<view-state id="stockSortie" view="../../../pages/stock/sortie/stockSortie.xhtml">
		<transition on="addSortie" to="isUse">
			<evaluate expression="sortieManager.addSortiePourPreparation()" />
		</transition>
		<transition on="modifySortie" to="editSortie">
			<evaluate expression="sortieManager.modifySortie()" />
		</transition>
		<transition on="delSortie">
			<evaluate expression="sortieManager.delSortie()" />
		</transition>
		<transition on="cancel" to="viewStockPreparation">
			<evaluate expression="sortieManager.cacheUtils.clearCacheEssai(sortieManager.essaiSelected.id)" />
		</transition>
		<transition on="suivant" to="prepareStockReception" />
		<transition on="error" to="stockSortie" />
		<transition on="submit" />

		<transition on="goStockConsultationFluxForEssai" to="consulterFluxForEssai" />
		<transition on="goStockConsultationForEssai" to="consulterStockForEssai" />
		<transition on="goStockExtensionPeremptionForEssai" to="extensionPeremptionForEssai" />
		<transition on="goStockReceptionForEssai" to="receptionForEssai" />
	</view-state>

	<!-- Edition de sortie -->
	<subflow-state id="editSortie" subflow="stock/sortie/detail">
		<transition on="comeback" to="stockSortie" />
	</subflow-state>


	<action-state id="prepareStockReception">
		<on-entry>
			<evaluate expression="approvisionnementManager.init()" />
			<set name="approvisionnementManager.essaiSelected" value="essaiService.reattach(sortieManager.essaiSelected)" />
			<evaluate expression="approvisionnementManager.handleSelectEssai(null)" />
			<set name="approvisionnementManager.pharmacieSelected" value="sortieManager.pharmacieSelected" />
			<evaluate expression="TYPE_MOUVEMENT_PREPARATION_ENTREE" result="approvisionnementManager.typeAppro" />
			<evaluate expression="sortieManager.buildComposition()" result="approvisionnementManager.composition" />
		</on-entry>
		<evaluate expression="produitService.getPreparations(approvisionnementManager.essaiSelected,
                                                         approvisionnementManager.pharmacieSelected)" result="approvisionnementManager.produits" />


		<transition to="stockReception">
		</transition>
	</action-state>

	<!-- Page principale -->
	<view-state id="stockReception" view="../../../pages/stock/reception/stockReception.xhtml">
		<transition on="addReceptionLot" to="editReceptionLot">
			<evaluate expression="approvisionnementManager.addReceptionLotPreparation()" />
		</transition>
		<transition on="modifyReceptionLot" to="editReceptionLot">
			<evaluate expression="approvisionnementManager.modifyReceptionLot()" />
		</transition>
		<transition on="delReceptionLot">
			<evaluate expression="approvisionnementManager.delReception()" />
		</transition>
		<transition on="cancel" to="viewStockPreparation">
			<evaluate expression="sortieManager.cacheUtils.clearCacheEssai(sortieManager.essaiSelected.id)" />
		</transition>
		<transition on="save" to="recapStockReception">
			<!-- Sauvegarde de la sortie -->
			<evaluate
				expression="sortieService.save(sortieManager.raisonSortie, sortieManager.commentaireRaison, sortieManager.typeSortie,sortieManager.nomSocieteTransport,sortieManager.referenceEnvoi,sortieManager.commentaire,sortieManager.pharmacieDest,sortieManager.sorties, null)"
				result="sortieManager.result" />
			<!-- Ajout des documents sur les sorties créées -->
			<evaluate expression="sortieFileHelper.addDocumentsSortie(sortieManager.typeSortie,sortieManager.result,sortieManager.fileDestruction,sortieManager.fileRetourPromoteur)" />
			<evaluate expression="approvisionnementService.save(approvisionnementManager.receptionLots)" result="approvisionnementManager.result" />
			<evaluate expression="approvisionnementManager.majNumOrdonnancier()" />

		</transition>
		<transition on="error" to="stockReception" />

		<transition on="goStockConsultationFluxForEssai" to="consulterFluxForEssai" />
		<transition on="goStockConsultationForEssai" to="consulterStockForEssai" />
		<transition on="goStockExtensionPeremptionForEssai" to="extensionPeremptionForEssai" />
		<transition on="goStockSortieForEssai" to="sortieForEssai" />
	</view-state>

	<!-- Edition de réception de lot -->
	<subflow-state id="editReceptionLot" subflow="stock/reception/lot">
		<on-entry>

			<evaluate expression="approvisionnementManager.composition" result="approvisionnementManager.receptionCurrent.appro.composition" />
		</on-entry>
		<transition on="comeback" to="stockReception" />
	</subflow-state>

	<!-- Page récapitulative de réception de stock -->
	<view-state id="recapStockReception" view="../../../pages/stock/preparation/recapStockPreparation.xhtml">
	</view-state>

</flow>